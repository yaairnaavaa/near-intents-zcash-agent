/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type ContractCallArgs =
  | GetLastVault
  | ClaimVault
  | GetAuctionInfo
  | StartOrPlaceBid
  | ClaimTokens
  | FtBalanceOf
  | ContractSourceMetadata 
  | GetGreeting 
  | SetGreeting


export type AccountId = string;
export interface GetLastVault {}
export interface ClaimVault { index: number; }
export interface GetAuctionInfo {}
export interface StartOrPlaceBid {}
export interface ClaimTokens {}
export interface FtBalanceOf {  account_id: AccountId;  }

export interface ContractSourceMetadata {}
export interface GetGreeting {}
export interface SetGreeting {
  greeting: string;
}

export function convertAsciiArrayToNumber(asciiArray: number[]): number {
  const numString = asciiArray
    .map(code => String.fromCharCode(code))  // Convertir los valores ASCII a caracteres
    .filter(char => char >= '0' && char <= '9')  // Filtrar solo los caracteres numÃ©ricos
    .join('');  // Unir los caracteres en una cadena

  return parseInt(numString, 10);
}

export function formatDate(date: Date): string {
  const day = String(date.getDate()).padStart(2, '0');
  const month = String(date.getMonth() + 1).padStart(2, '0'); // Meses comienzan en 0
  const year = String(date.getFullYear()).slice(2); // AÃ±o en formato "aa"
  const hours = String(date.getHours()).padStart(2, '0');
  const minutes = String(date.getMinutes()).padStart(2, '0');
  const seconds = String(date.getSeconds()).padStart(2, '0');

  return `${day}/${month}/${year} ${hours}:${minutes}:${seconds}`;
}